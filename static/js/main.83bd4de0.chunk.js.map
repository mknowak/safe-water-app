{"version":3,"sources":["components/ProductListItem.js","components/ProductInCart.js","components/WaterWaste.js","components/ProductList.js","components/App.js","serviceWorker.js","index.js"],"names":["Product","props","product","text","id","className","onClick","buy","ProductInCart","remove","WaterWaste","incarts","products","filter","active","map","console","log","production","incart","eko","cansave","sum","reduce","total","next","ecoChoise","lowervalue","href","ProductList","state","select","filterCategory","key","category","boughtProducts","option","this","setState","handleCategoryFilter","bind","wasted","Component","App","all","buyProduct","forEach","removeProduct","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83bd4de0.chunk.js","sourcesContent":["import React from 'react';\nimport '../Product.css'\n\nconst Product = (props) => {\n\n    const { text, id } = props.product\n\n    return (\n        <div className='product'>\n            <p>\n                <span>{text}</span>\n                <button onClick={() => props.buy(id)} >Kup produkt</button>\n\n            </p>\n        </div>\n\n    )\n}\n\nexport default Product;","import React from 'react';\nimport '../ProductInCart.css'\n\nconst ProductInCart = (props) => {\n\n    const { text, id } = props.product\n\n    return (\n        <div className='product_in_cart'>\n            <p>\n                <span>{text}</span>\n                <button onClick={() => props.remove(id)}>Anuluj</button>\n\n            </p>\n        </div >\n\n    )\n}\n\nexport default ProductInCart;","import React from 'react';\nimport '../WaterWaste.css'\n\n\nconst WaterWaste = (props) => {\n\n    const bought = props.products.filter(product => product.active === false);\n\n    const incarts = bought.map(product => product);\n\n\n    console.log(incarts)\n\n    const production = incarts.map(incart => incart.production)\n    const eko = incarts.map(incart => incart.eko)\n    const cansave = incarts.map(incart => incart.cansave)\n\n    console.log(production)\n\n    const sum = production.reduce(function (total, next) {\n        return total + next;\n    }, 0)\n\n    const ecoChoise = eko.reduce(function (total, next) {\n        return total + next;\n    }, 0)\n\n    const lowervalue = cansave.reduce(function (total, next) {\n        return total + next;\n    }, 0)\n\n\n\n\n    return (\n        <section className='waste'>\n            <div className='sum_production'>\n                <h2>Do produkcji zużyto: <span>{sum} l</span></h2>\n            </div>\n            <div className='sum_production'>\n                <h2>Ekologoczne zamienniki: <span>{ecoChoise} l</span></h2>\n\n            </div>\n            <div className='save'>\n                <h2>Możesz oszczędzić: <strong>{lowervalue} l</strong></h2>\n\n            </div>\n            <button className='more'><a href=\"https://mknowak.github.io/save-water-page/\">Dowiedz się więcej</a></button>\n        </section>\n\n    )\n}\n\nexport default WaterWaste;","import React, {\n    Component\n} from 'react';\nimport Product from './ProductListItem.js'\nimport ProductInCart from './ProductInCart.js'\nimport WaterWaste from './WaterWaste.js'\n// import { all } from 'q';\nimport '../ProductList.css'\n\n\nclass ProductList extends Component {\n    state = {\n        select: 'all',\n\n    }\n\n    handleCategoryFilter(option) {\n        this.setState({\n            select: option,\n        })\n\n    }\n\n    filterCategory = () => {\n        let products = this.props.products;\n        switch (this.state.select) {\n            case \"all\":\n                products = products.filter(product => product.active === true)\n                return products.map(product => <Product product={product} key={product.id} buy={this.props.buy} />)\n            case \"food\":\n                products = products.filter(product => product.category === \"food\" && product.active === true);\n                return products.map(product => <Product product={product} key={product.id} buy={this.props.buy} />)\n            case \"cloth\":\n                products = products.filter(product => product.category === \"cloth\" && product.active === true);\n                return products.map(product => <Product product={product} key={product.id} buy={this.props.buy} />)\n            case \"everyday\":\n                products = products.filter(product => product.category === \"everyday\" && product.active === true);\n                return products.map(product => <Product product={product} key={product.id} buy={this.props.buy} />)\n            default:\n                return \"Nie ma takie kategorii\"\n\n        }\n    }\n\n    boughtProducts = () => {\n        const bought = this.props.products.filter(product => product.active === false);\n\n        const boughtProducts = bought.map(product => <ProductInCart key={product.id} product={product} remove={this.props.remove} />)\n\n        return boughtProducts\n\n    }\n\n\n\n    render() {\n        return (\n            <section className='box'>\n                <section className='list'>\n                    <h2>Lista produktów</h2>\n                    <div className='button_holder'>\n                        <button onClick={this.handleCategoryFilter.bind(this, 'all')}>Wszystko</button><button onClick={this.handleCategoryFilter.bind(this, 'food')}>Produkty spożywcze</button><button onClick={this.handleCategoryFilter.bind(this, 'cloth')}>Ubrania</button><button onClick={this.handleCategoryFilter.bind(this, 'everyday')}>Codzienne</button>\n                    </div>\n                    <div className='product_list'>\n                        {this.filterCategory()}\n                    </div>\n                </section>\n                <div className='right_side'>\n                    <section className='cart'>\n                        <h2>Twój koszyk</h2>\n                        <div className='cart_list'>{this.boughtProducts()}</div>\n                    </section>\n                    <WaterWaste wasted={this.props.wasted} products={this.props.products} />\n                </div>\n            </section>\n        )\n    }\n\n    // const active = props.products.filter(product => product.active === true);\n    // const bought = props.products.filter(product => product.active === false);\n    // // console.log(active);\n    // const activeProducts = active.map(product => <Product key={product.id} product={product} buy={props.buy} />);\n\n    // const boughtProducts = bought.map(product => <ProductInCart key={product.id} product={product} remove={props.remove} />)\n\n\n    //     return (\n    //         <div>\n    //             <div className='list'>\n    //                 <h2>Lista produktów</h2>\n    //                 <button onClick={() => props.all}>Wszystko</button><button onClick={() => props.food}>Produkty spożywcze</button><button onClick={() => props.cloth}>Ubrania</button><button onClick={() => props.everyday}>Codzienne</button>\n    //                 {activeProducts}\n    //             </div>\n    //             <div className='cart'>\n    //                 <h2>Twój koszyk</h2>\n    //                 {boughtProducts}\n    //             </div>\n    //             <WaterWaste bought={bought} wasted={props.wasted} products={props.products} />\n    //         </div >\n\n    //     );\n}\n\nexport default ProductList;","import React, {\n  Component\n} from 'react';\nimport ProductList from './ProductList.js'\nimport { all } from 'q';\n\nimport '../App.css';\n\n\nclass App extends Component {\n  state = {\n    select: all,\n    products: [{\n      id: 0,\n      text: \"Butelka wody 1.5l\",\n      category: \"everyday\",\n      production: 7.5,\n      eko: 1.5,\n      cansave: 6,\n      active: true,\n\n    },\n    {\n      id: 1,\n      text: \"Mięso wołowe 1kg\",\n      category: \"food\",\n      production: 15415,\n      eko: 322,\n      cansave: 15093,\n      active: true,\n    },\n    {\n      id: 2,\n      text: \"Mięso wieprzowe 1kg\",\n      category: \"food\",\n      production: 5988,\n      eko: 322,\n      cansave: 5666,\n      active: true,\n    },\n    {\n      id: 3,\n      text: \"Mięso z kurczaka 1kg\",\n      category: \"food\",\n      production: 4325,\n      eko: 322,\n      cansave: 4003,\n      active: true,\n    },\n    {\n      id: 4,\n      text: \"Książka ok. 400 stron\",\n      category: \"everyday\",\n      production: 125,\n      eko: 0.6,\n      cansave: 124.4,\n      active: true,\n    },\n    {\n      id: 5,\n      text: \"Para jeansów\",\n      category: \"cloth\",\n      production: 11000,\n      eko: 5500,\n      cansave: 5500,\n      active: true,\n    },\n    {\n      id: 6,\n      text: \"Bawełniania koszulka\",\n      category: \"cloth\",\n      production: 2500,\n      eko: 1250,\n      cansave: 1250,\n      active: true,\n    },\n    {\n      id: 7,\n      text: \"Plastikowa torba na zakupy\",\n      category: \"everyday\",\n      production: 0.8,\n      eko: 0.2,\n      cansave: 0.6,\n      active: true,\n    },\n    {\n      id: 8,\n      text: \"Pielucha jednorazowa\",\n      category: \"everyday\",\n      production: 545,\n      eko: 1,\n      cansave: 544,\n      active: true,\n    },\n\n\n\n    ],\n  }\n\n\n\n  buyProduct = (id) => {\n    const products = [...this.state.products];\n    products.forEach(product => {\n      if (product.id === id) {\n        product.active = false\n      }\n    });\n    this.setState({\n      products\n    })\n\n\n  }\n\n  removeProduct = (id) => {\n    const products = [...this.state.products];\n    products.forEach(product => {\n      if (product.id === id) {\n        product.active = true\n      }\n    });\n    this.setState({\n      products\n    })\n  }\n\n\n\n\n\n  render() {\n    return (\n      <div className='wrapper' >\n        <header>\n          <h1> Save water! </h1>\n        </header>\n\n        <ProductList products={this.state.products} buy={this.buyProduct}\n          remove={this.removeProduct} />\n\n      </div>\n\n    );\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}